generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model User{
  @@map(name: "users")

  id String  @id @default(uuid())
  name String  
  email String @unique
  verified Boolean? @default(false) 
  
  password String
  role RoleEnumType? @default(staff)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  lastLogin DateTime @default(now())
}

enum RoleEnumType {
  staff
  manager
  admin
  superadmin
}

model MenuItem {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  name       String
  price      Float
  categories String[]
  imageKey   String
  active     Boolean  @default(true)
}

model Day {
  id        String  @id @default(cuid())
  name      String
  dayOfWeek Int
  openTime  String
  closeTime String
  open      Boolean @default(true)
}

model ClosedDay {
  id   String   @id @default(cuid())
  date DateTime @unique
}

model Booking {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  people    String
  mobile    String
  email     String
  preorder  Boolean
  dateTime  DateTime
  tableId   String
  canceled  Boolean @default(false)
}

model Preorder {
  id        String   @id @default(cuid())
  bookingId String
  item      String
  quantity  Int
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tables {
  id        String  @id @default(cuid())
  name      String
  location  String
  capacity  Int
}

model Promotion {
  id            String  @id @default(cuid())
  name          String
  isAvailable   Boolean
  startDate     DateTime @default(now())
  endDate       DateTime
  description   String
}


